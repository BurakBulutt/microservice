server:
  port: 8082
spring:
  application:
    name: service-media
  elasticsearch:
    connection-timeout: 1s
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false
  datasource:
    username: ${DB_USER:media_admin}
    password: ${DB_PASSWORD:Media_admin123}
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/${DB_NAME:app_media}
    driver-class-name: org.postgresql.Driver
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    show-sql: true
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
        alphanumeric-ids:
          enabled: true
    stream:
      bindings:
        deleteComments-out-0:
          destination: deleteComments
      rabbit:
        bindings:
          deleteComments-out-0:
            producer:
              ttl: 10000
  rabbitmq:
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    host: ${RABBITMQ_HOST:localhost}
    port: 5672
    connection-timeout: 1s
  data:
    elasticsearch:
      repositories:
        enabled: true
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379
      connect-timeout: 1s
    mongodb:
      uri: mongodb://${MONGO_USERNAME:root}:${MONGO_PASSWORD:mongodb}@${MONGO_HOST:localhost}:27017/${MONGO_DATABASE:service-media}?authSource=admin&authMechanism=SCRAM-SHA-256
resilience4j:
  timelimiter:
    configs:
      default:
        timeout-duration: 2s
        cancel-running-future: false
  circuitbreaker:
    configs:
      default:
        minimum-number-of-calls: 10
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        ignore-exceptions:
          - com.example.servicemedia.util.exception.BaseException
          - feign.FeignException.BadRequest
          - feign.FeignException.NotFound
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 100ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        ignore-exceptions:
          - com.example.servicemedia.util.exception.BaseException
          - feign.FeignException.BadRequest
          - feign.FeignException.NotFound
eureka:
  instance:
    lease-renewal-interval-in-seconds: 20
    lease-expiration-duration-in-seconds: 60
  client:
    registry-fetch-interval-seconds: 20
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_HOST:localhost}:8761/eureka/
management:
  server:
    port: 9002
  endpoint:
    health:
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
    enabled: false
  otlp:
    logging:
      export:
        enabled: false
    metrics:
      export:
        enabled: false
    tracing:
      endpoint: http://${OTLP_HOST:localhost}:4318/v1/traces
logging:
  level:
    com.example.servicemedia: debug
    org.springframework.batch: debug
info:
  application:
    name: service-media
    description: service-media
    version: 0.0.1-SNAPSHOT