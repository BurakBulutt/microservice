services:
  database:
    image: postgres:latest
    container_name: app-database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5
    extends:
      file: common-config.yaml
      service: other-services-config

  auth:
    image: bitnami/keycloak:latest
    container_name: app-keycloak
    ports:
      - "8090:8080"
      - "9000:9000"
    volumes:
      - keycloak_data:/opt/bitnami/keycloak
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: "curl --head -fsS http://localhost:9000/health/ready"
      interval: 10s
      timeout: 5s
      retries: 10
    extends:
      file: common-config.yaml
      service: other-services-config

  redis:
    image: redis:latest
    container_name: local-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 10s
    extends:
      file: common-config.yaml
      service: other-services-config

  rabbitmq:
    image: rabbitmq:management
    container_name: local-rabbitmq
    ports:
      - "15672:15672"
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: other-services-config

  configserver:
    image: wraithkage/app-configserver:0.0.1-SNAPSHOT
    container_name: config-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: microservice-config

  eureka:
    image: wraithkage/app-eureka:0.0.1-SNAPSHOT
    container_name: eureka-service
    ports:
      - "8761:8761"
    depends_on:
      configserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: microservice-config

  gateway:
    image: wraithkage/app-gateway:0.0.1-SNAPSHOT
    container_name: gateway-service
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
      eureka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: microservice-config

  users:
    image: wraithkage/app-users:0.0.1-SNAPSHOT
    container_name: users-service
    depends_on:
      configserver:
        condition: service_healthy
      auth:
        condition: service_healthy
      eureka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: microservice-config

  media:
    image: wraithkage/app-media:0.0.1-SNAPSHOT
    container_name: media-service
    depends_on:
      configserver:
        condition: service_healthy
      eureka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy
    env_file:
      - media.env
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: microservice-config

  reaction:
    image: wraithkage/app-reaction:0.0.1-SNAPSHOT
    container_name: reaction-service
    depends_on:
      configserver:
        condition: service_healthy
      eureka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy
    env_file:
      - reaction.env
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: microservice-config

networks:
  microservice-network:
    driver: bridge

volumes:
  microservice_postgres_data:
    external: true
  local_keycloak_data:
    external: true
  redis_data:
  rabbit-data: