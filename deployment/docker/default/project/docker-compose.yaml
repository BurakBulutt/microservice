services:
  database:
    image: postgres:latest
    container_name: service-database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    env_file:
      - environments/postgres.env
    extends:
      file: ../common-config.yaml
      service: base-config

  auth:
    image: bitnami/keycloak:latest
    container_name: service-auth
    ports:
      - "8090:8080"
    volumes:
      - keycloak_data:/opt/bitnami/keycloak
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:9000/health/ready | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    env_file:
      - environments/keycloak.env
    extends:
      file: ../common-config.yaml
      service: base-config

  redis:
    image: redis:latest
    container_name: service-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    extends:
      file: ../common-config.yaml
      service: base-config

  rabbitmq:
    image: rabbitmq:management
    container_name: service-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    env_file:
      - environments/rabbitmq.env
    extends:
      file: ../common-config.yaml
      service: base-config

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.3
    container_name: service-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    healthcheck:
      test: >
        curl -fs http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s
        | grep -q '"status":"yellow"\|"status":"green"'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    extends:
      file: ../common-config.yaml
      service: base-config
    mem_limit: 1024m

  app-eureka:
    image: wraithkage/service-eureka:0.0.1-SNAPSHOT
    container_name: service-eureka
    ports:
      - "8761:8761"
    env_file:
      - environments/globalproject.env
    extends:
      file: ../common-config.yaml
      service: app-base-config

  app-gateway:
    image: wraithkage/service-gateway:0.0.1-SNAPSHOT
    container_name: service-gateway
    ports:
      - "8080:8080"
    depends_on:
      app-eureka:
        condition: service_healthy
      app-users:
        condition: service_healthy
      app-reaction:
        condition: service_healthy
      app-media:
        condition: service_healthy
    env_file:
      - environments/globalproject.env
      - environments/gateway.env
    extends:
      file: ../common-config.yaml
      service: app-base-config

  app-users:
    image: wraithkage/service-users:0.0.1-SNAPSHOT
    container_name: service-users
    depends_on:
      auth:
        condition: service_healthy
      app-eureka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - environments/globalproject.env
      - environments/users.env
    extends:
      file: ../common-config.yaml
      service: app-base-config

  app-media:
    image: wraithkage/service-media:0.0.1-SNAPSHOT
    container_name: service-media
    depends_on:
      app-eureka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    env_file:
      - environments/globalproject.env
      - environments/media.env
    extends:
      file: ../common-config.yaml
      service: app-base-config

  app-reaction:
    image: wraithkage/service-reaction:0.0.1-SNAPSHOT
    container_name: service-reaction
    depends_on:
      app-eureka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    env_file:
      - environments/globalproject.env
      - environments/reaction.env
    extends:
      file: ../common-config.yaml
      service: app-base-config

networks:
  app-network:
    name: app_network_default
    driver: bridge

volumes:
  postgres_data:
    name: project_postgres_data
  keycloak_data:
    name: project_keycloak_data
  redis_data:
    name: project_redis_data
  rabbit_data:
    name: project_rabbit_data
  mongo_data:
    name: project_mongo_data
  elastic_data:
    name: project_elastic_data